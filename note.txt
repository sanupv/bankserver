Server Creation
---------------

install express 

          -npm i express

1.import express

2.create an app using express

3.create port number     (3000 series)

4.create requests  according to our project ....


nodemon Server 
--------------

-npm i -g nodemon


User Authentiacation Using Express 
----------------------------------

JWT (json web token) token
--------------------------

jsonwebtoken    -library         npm i jsonwebtoken
sign()          -method used for generate token
verify()        -method to verify jwt tokens


Middlewares 
-----------

-middlewares have the capacity to control server requests
-its a function with 3 arguements  (request,response,next)

-two types 

     1.Application Specific Middlewares

     2.Router Specific Middlewares 



Solving Run-time errors in JS 
-----------------------------

try catch

try {
    error causing code
}
catch{
    solution
}


Mongo DB
--------

-mongodb server
-shell commands in mongodb

        - to see the databases

           ->show dbs 

        -open databases

           ->use database_name


        -view collections inside database 

           ->show collections

        -to view datas inside collections

           ->db.collection_name.find()

        -to view any single data inside collections

           ->db.collection_name.findOne({unique data to identify})

        -to insert new data 
          
           ->db.collection_name.insertOne({data})

        -to view any single data according to a condition

          ->db.collection_name.findOne({condition})  single data
          ->db.collection_name.find({condition})     all datas

        -delete 

          -delete single data

               ->db.collection_name.deleteOne({data})

               -delete count=number
               -delete count=0       if nothing deleted

         -update 

              ->db.collection_name.updateOne({data to be update},{new data})

                                            ({uname:'anu'},{uname:'anu v'})



crud    -create read update delete
            